# This configuration file example shows how to configure the srsRAN Project gNB to allow srsUE to connect to it. 
# This specific example uses ZMQ in place of a USRP for the RF-frontend, and creates an FDD cell with 10 MHz bandwidth. 
# To run the srsRAN Project gNB with this config, use the following command: 
#   sudo ./gnb -c gnb_zmq.yaml



amf:
  addr: 127.0.0.5                   # Adresse ou nom d'hôte de l'AMF.
  bind_addr: 127.0.0.5             # IP locale que le gNB utilise pour le trafic de l'AMF.

ru_sdr:
  device_driver: zmq                # Nom du pilote RF.
  device_args: tx_port=tcp://127.0.0.1:2000,rx_port=tcp://127.0.0.1:2001,base_srate=23.04e6
  srate: 23.04                      # Taux d'échantillonnage RF.
  tx_gain: 75                       # Gain de transmission RF.
  rx_gain: 75                       # Gain de réception RF.

cell_cfg:
  dl_arfcn: 368500                  # ARFCN de la porteuse de descente.
  band: 3                           # La bande NR.
  channel_bandwidth_MHz: 20         # Largeur de bande en MHz.
  common_scs: 15                    # Espacement de sous-porteuse en kHz.
  plmn: "00101"                     # PLMN diffusé par le gNB.
  tac: 7                            # Code de zone de suivi.
  pdcch:
    common:
      ss0_index: 0                  # Index de l'espace de recherche zéro.
      coreset0_index: 12             # Index CORESET zéro.
    dedicated:
      ss2_type: common              # Type d'espace de recherche.
      dci_format_0_1_and_1_1: false # Format DCI correct.
  prach:
    prach_config_index: 1           # Configuration PRACH.
    total_nof_ra_preambles: 64      # Nombre de préambules PRACH disponibles.
    nof_ssb_per_ro: 1               # Nombre de SSBs par occasion RACH.
    nof_cb_preambles_per_ssb: 64    # Nombre de préambules basés sur la contention par SSB.

cu_cp:
  inactivity_timer: 7200            # Timer d'inactivité pour UE/PDU Session/DRB.

log:
  filename: /tmp/gnb.log            # Path of the log file.
  #all_level: debug                   # Logging level applied to all layers.
  hex_max_size: 0
  mac_level: debug 
  
pcap:
  mac_enable: false                 # Set to true to enable MAC-layer PCAPs.
  mac_filename: /tmp/gnb_mac.pcap   # Path where the MAC PCAP is stored.
  ngap_enable: false                # Set to true to enable NGAP PCAPs.
  ngap_filename: /tmp/gnb_ngap.pcap # Path where the NGAP PCAP is stored.
  e2ap_enable: true                 # Set to true to enable E2AP PCAPs.
  e2ap_filename: /tmp/gnb_e2ap.pcap # Path where the E2AP PCAP is stored.

e2:
  enable_du_e2: true                # Enable DU E2 agent (one for each DU instance)
  e2sm_kpm_enabled: true            # Enable KPM service module
  e2sm_rc_enabled: true             # Enable RC service module
  addr: 127.0.0.1                   # RIC IP address
  #bind_addr: 127.0.0.100           # A local IP that the E2 agent binds to for traffic from the RIC. ONLY required if running the RIC on a separate machine. 
  port: 36421                       # RIC port


metrics:
  #addr: 172.19.1.4                    # Metrics-server IP
  #port: 55555                         # Port UDP pour les métriques.
  rlc_report_period: 100               # Période de rapport des métriques RLC en millisecondes.
  rlc_json_enable: true                # Activer le rapport des métriques RLC au format JSON.
  enable_json_metrics: true            # Activer le rapport des métriques au format JSON.
  stdout_metrics_period: 25

